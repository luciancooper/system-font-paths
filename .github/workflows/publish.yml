name: Publish

on:
  release:
    types: [published]

permissions:
  id-token: write
  contents: read

jobs:
  prebuild:
    name: Prebuild Node ${{ matrix.node }} on ${{ matrix.target.os }} ${{ matrix.target.arch }}

    strategy:
      fail-fast: false
      matrix:
        target:
          - { os: ubuntu-latest }
          - { os: macos-latest, arch: x64 }
          - { os: macos-latest, arch: arm64 }
          - { os: windows-latest, arch: x64 }
          - { os: windows-latest, arch: x86 }
        node: [16, 18, 20, 22]

    runs-on: ${{ matrix.target.os }}

    steps:
    - name: checkout repo
      uses: actions/checkout@v4

    - name: setup node ${{ matrix.node }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
        architecture: ${{ matrix.target.arch }}

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-session-name: GithubSession

    - name: install linux system dependencies
      if: ${{ matrix.target.os == 'ubuntu-latest' }}
      run: sudo apt-get update && sudo apt-get install -y --no-install-recommends libfontconfig1-dev

    - name: install dependencies
      run: yarn install --ignore-engines --ignore-scripts

    - name: configure build
      run: yarn node-pre-gyp configure

    - name: build binaries
      run: yarn node-pre-gyp build

    - name: unpublish any conflicting binaries from aws bucket
      run: yarn node-pre-gyp unpublish

    - name: package prebuilt binaries
      run: yarn node-pre-gyp package

    - name: publish binaries to aws bucket
      run: yarn node-pre-gyp publish

  publish:
    name: Publish to NPM
    needs: [prebuild]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        registry-url: https://registry.npmjs.org/
    - run: yarn --frozen-lockfile
    - run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
